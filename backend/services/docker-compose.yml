version: '3'  # Specify the Docker Compose version

services:
  flight_inventory:
    container_name: flight_inventory
    build: ./flight_inventory  # Path to your Flask app's Dockerfile
    ports:
      - '5000:5000'    # Expose Flask's default port 5000
    depends_on:
      - mongodb        # Ensure MongoDB starts before Flask
    links:             # Optional, but good for legacy setups
      - mongodb

  flight_search:
    container_name: flight_search
    build: ./flight_search  # Path to your Flask app's Dockerfile
    ports:
      - '5001:5001'  

  pricing:
    container_name: flight_pricing
    build: ./pricing  # Path to your Flask app's Dockerfile
    ports:
      - '5002:5002'  
    depends_on:
      - sql_db  

  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:          # Optional for data persistence 
      - mongodb_data:/data/db 

  mongo-express:
    container_name: mongo_express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081 # Or your preferred port mapping
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@host.docker.internal:27017/
    depends_on:
      - mongodb

  mongo-seed:
    build: ./database/mongo
    depends_on:
      - mongodb
    # volumes:
    #   - ./main.py:/main.py 
    #   - .flight_inventory/flight_inventory.json:/app/flight_inventory/flight_inventory.json
    # command: wait-for-it.sh mongodb:27017 --strict --timeout=30 -- python /main.py 

  # mongo-seed:
  #   build: ./database/mongo
  #   depends_on:
  #     - mongodb

  sql_db:  
    container_name: sql_db
    image: mysql:5.7  
    restart: always
    environment:
      MYSQL_DATABASE: prices
      MYSQL_ROOT_PASSWORD: strong_password  # Set your desired password here               # Set your desired username here
      MYSQL_PASSWORD: password 
    ports:
      - 3306:3306
    volumes:
      - ./database/my_sql:/docker-entrypoint-initdb.d 
      - db_data:/var/lib/mysql

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    links:
      - sql_db
    environment:
      PMA_HOST: sql_db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8082:80

volumes:
  mongodb_data:
  db_data:  # Named volume for MongoDB data 