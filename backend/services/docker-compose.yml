version: '3.8'  # Specify the Docker Compose version

services:
  # flight_inventory:
  #   build: ./flight_inventory  # Path to your Flask app's Dockerfile
  #   ports:
  #     - '5000:5000'    # Expose Flask's default port 5000
  #   depends_on:
  #     - mongodb        # Ensure MongoDB starts before Flask
  #   links:             # Optional, but good for legacy setups
  #     - mongodb
  # flight_search:
  #   build: ./flight_search  # Path to your Flask app's Dockerfile
  #   ports:
  #     - '5001:5001'    # Expose Flask's default port 5000
  # mongodb:
  #   image: mongo       # Use the official MongoDB image
  #   ports:
  #     - '27017:27017'  # Expose MongoDB's default port 27017
  #   volumes:          # Optional for data persistence 
  #     - mongodb_data:/data/db 

#######################################################
  # Payment Record: The Payment microservice
  #######################################################
  shipping_record:
    build:
      context: ./payment
      dockerfile: Dockerfile
    image: jiayenbeh/payment
    restart: always
    depends_on:
      - rabbitmq
    environment:
      PYTHONUNBUFFERED: 1

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - ./payment/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./payment/rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  rabbitmq_data: 